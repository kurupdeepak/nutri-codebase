{"cells":[{"cell_type":"markdown","source":["#Setup\n"],"metadata":{"id":"QtBbzvHUquO8"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wiwdrbNvr6H-","executionInfo":{"status":"ok","timestamp":1668978306284,"user_tz":300,"elapsed":17424,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"921fc522-d442-4caa-ea9a-0327e7fe7d40"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4348,"status":"ok","timestamp":1668978310628,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"},"user_tz":300},"id":"Skisn0RFbSRR","outputId":"1945dc8a-95e1-472d-dc41-90f20f2ccb77"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting tensorflow-addons\n","  Downloading tensorflow_addons-0.18.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.1 MB)\n","\u001b[K     |████████████████████████████████| 1.1 MB 5.2 MB/s \n","\u001b[?25hRequirement already satisfied: typeguard>=2.7 in /usr/local/lib/python3.7/dist-packages (from tensorflow-addons) (2.7.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from tensorflow-addons) (21.3)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->tensorflow-addons) (3.0.9)\n","Installing collected packages: tensorflow-addons\n","Successfully installed tensorflow-addons-0.18.0\n"]}],"source":["!pip install -U tensorflow-addons"]},{"cell_type":"markdown","metadata":{"id":"OVz8qWBQXv8R"},"source":["##Import"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KmVXcP2xAA8R"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import tensorflow as tf\n","import glob2 as glob\n","import matplotlib.pyplot as plt\n","import tensorflow_addons as tfa\n","import random\n","import os\n","import seaborn as sns\n","import sys\n","import cv2"]},{"cell_type":"code","source":["sys.path"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NLtWrZazPTsD","executionInfo":{"status":"ok","timestamp":1668978314309,"user_tz":300,"elapsed":12,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"716acbc1-a095-490c-dfb6-a54dbb73360d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content',\n"," '/env/python',\n"," '/usr/lib/python37.zip',\n"," '/usr/lib/python3.7',\n"," '/usr/lib/python3.7/lib-dynload',\n"," '',\n"," '/usr/local/lib/python3.7/dist-packages',\n"," '/usr/lib/python3/dist-packages',\n"," '/usr/local/lib/python3.7/dist-packages/IPython/extensions',\n"," '/root/.ipython']"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["sys.path.append(\"/content/drive/MyDrive/01_LJMU_UPGRAD/experiments/final-thesis-lab/workspace/notebooks/nutrition\")"],"metadata":{"id":"cXFY7B-L8D6f"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sys.path"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1whcfZca9fve","executionInfo":{"status":"ok","timestamp":1668978315398,"user_tz":300,"elapsed":1098,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"3c81c4b7-14c9-4d85-abce-d5b6427fe297"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content',\n"," '/env/python',\n"," '/usr/lib/python37.zip',\n"," '/usr/lib/python3.7',\n"," '/usr/lib/python3.7/lib-dynload',\n"," '',\n"," '/usr/local/lib/python3.7/dist-packages',\n"," '/usr/lib/python3/dist-packages',\n"," '/usr/local/lib/python3.7/dist-packages/IPython/extensions',\n"," '/root/.ipython',\n"," '/content/drive/MyDrive/01_LJMU_UPGRAD/experiments/final-thesis-lab/workspace/notebooks/nutrition']"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["## Custom Module Imports and test"],"metadata":{"id":"Ga5000ksA098"}},{"cell_type":"markdown","source":["### Module Imports"],"metadata":{"id":"rMWWS0WhWTZJ"}},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","import datetime\n","from core.utility import get_rgb_image,plot_loss_curves\n","from core.vit.Patch import Patches\n","from core.vit.vit_config import image_size\n","from init_data import load_available_data,normalize_numeric_data\n","from core.ModelCreator import create_vit_model\n","from core.vit.vit_config import *\n","from core.callbacks import *"],"metadata":{"id":"ncAkBHMmBzVz"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Load Data"],"metadata":{"id":"kclHgbFjq9kV"}},{"cell_type":"code","source":["LOG_TAG = \"ENTRYPOINT : \"\n","print(LOG_TAG, \"Start loading data \")\n","\n","dish, dish_ingredients = load_available_data()\n","\n","print(dish.info())\n","print(dish_ingredients.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CIFH9Zib8Xbi","executionInfo":{"status":"ok","timestamp":1668978376582,"user_tz":300,"elapsed":57349,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"72c329bb-b3b5-4b79-cae0-0f46b6240280"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ENTRYPOINT :  Start loading data \n","init_data_py :  Total Dishes (5006, 6)\n","init_data_py :  Total Dish Ingredients (28455, 8)\n","init_data_py :  Dish Master (5006, 6)\n","init_data_py :  Dish Ingredients Master (28455, 8)\n","init_data_py :  Training Dish Ids (2758, 1)\n","init_data_py :  Test Dish Ids (507, 1)\n","init_data_py :  Dish Information =  (5006, 6)\n","init_data_py :  Dish Ingredient Information =  (28455, 8)\n","init_data_py :  Dish data top rows\n","           dish_id total_calories  total_mass  total_fat total_carb  \\\n","0  dish_1561662216     300.794281  193.000000  12.387489  28.218290   \n","1  dish_1562688426     137.569992   88.000000   8.256000   5.190000   \n","2  dish_1561662054     419.438782  292.000000  23.838249  26.351543   \n","3  dish_1562008979     382.936646  290.000000  22.224644  10.173570   \n","4  dish_1560455030      20.590000  103.000000   0.148000   4.625000   \n","\n","  total_protein  \n","0     18.633970  \n","1     10.297000  \n","2     25.910593  \n","3     35.345387  \n","4      0.956000  \n","init_data_py :  Dish Ingredients data top rows\n","           dish_id               id        name     grams     calories  \\\n","0  dish_1561662216  ingr_0000000508   soy sauce  3.398568   1.80124104   \n","1  dish_1561662216  ingr_0000000122      garlic  2.124105   3.16491645   \n","2  dish_1561662216  ingr_0000000026  white rice  8.496420    11.045346   \n","3  dish_1561662216  ingr_0000000524     parsley  0.213397  0.079170287   \n","4  dish_1561662216  ingr_0000000094      onions  1.707173    0.6828692   \n","\n","           fat         carb      protein  \n","0  0.020391408  0.166529832  0.275284008  \n","1  0.010620525   0.70095465   0.13594272  \n","2   0.02548926    2.3789976   0.22940334  \n","3  0.001707176  0.013657408  0.006188513  \n","4  0.001707173   0.15364557  0.018778903  \n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 5006 entries, 0 to 237\n","Data columns (total 6 columns):\n"," #   Column          Non-Null Count  Dtype \n","---  ------          --------------  ----- \n"," 0   dish_id         5006 non-null   object\n"," 1   total_calories  5006 non-null   object\n"," 2   total_mass      5006 non-null   object\n"," 3   total_fat       5006 non-null   object\n"," 4   total_carb      5006 non-null   object\n"," 5   total_protein   5006 non-null   object\n","dtypes: object(6)\n","memory usage: 273.8+ KB\n","None\n","------------------------------------------------------------------------------------------------------------------------------------------------------\n","           dish_id               id        name     grams   calories  \\\n","0  dish_1561662216  ingr_0000000508   soy sauce  3.398568   1.801241   \n","1  dish_1561662216  ingr_0000000122      garlic  2.124105   3.164917   \n","2  dish_1561662216  ingr_0000000026  white rice  8.496420  11.045346   \n","3  dish_1561662216  ingr_0000000524     parsley  0.213397   0.079170   \n","4  dish_1561662216  ingr_0000000094      onions  1.707173   0.682869   \n","\n","        fat      carb   protein  \n","0  0.020391  0.166530  0.275284  \n","1  0.010621  0.700955  0.135943  \n","2  0.025489  2.378998  0.229403  \n","3  0.001707  0.013657  0.006189  \n","4  0.001707  0.153646  0.018779  \n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 5006 entries, 0 to 237\n","Data columns (total 6 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   dish_id         5006 non-null   object \n"," 1   total_calories  5006 non-null   float32\n"," 2   total_mass      5006 non-null   float32\n"," 3   total_fat       5006 non-null   float32\n"," 4   total_carb      5006 non-null   float32\n"," 5   total_protein   5006 non-null   float32\n","dtypes: float32(5), object(1)\n","memory usage: 176.0+ KB\n","None\n","------------------------------------------------------------------------------------------------------------------------------------------------------\n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 3265 entries, 0 to 3264\n","Data columns (total 7 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   dish_id         3265 non-null   object \n"," 1   image_path      3265 non-null   object \n"," 2   total_calories  3265 non-null   float32\n"," 3   total_mass      3265 non-null   float32\n"," 4   total_fat       3265 non-null   float32\n"," 5   total_carb      3265 non-null   float32\n"," 6   total_protein   3265 non-null   float32\n","dtypes: float32(5), object(2)\n","memory usage: 140.3+ KB\n","None\n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 23859 entries, 0 to 27224\n","Data columns (total 8 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   dish_id   23859 non-null  object \n"," 1   id        23859 non-null  object \n"," 2   name      23859 non-null  object \n"," 3   grams     23859 non-null  float32\n"," 4   calories  23859 non-null  float32\n"," 5   fat       23859 non-null  float32\n"," 6   carb      23859 non-null  float32\n"," 7   protein   23859 non-null  float32\n","dtypes: float32(5), object(3)\n","memory usage: 1.2+ MB\n","None\n"]}]},{"cell_type":"code","source":["normalize_numeric_data(dish,dish_ingredients)"],"metadata":{"id":"ZfRk59fJBqJx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dish.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"polu4aFc8czc","executionInfo":{"status":"ok","timestamp":1669013870945,"user_tz":300,"elapsed":6,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"dc112ad4-5f29-42b6-883c-bf27084c46e4"},"execution_count":106,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3265, 17)"]},"metadata":{},"execution_count":106}]},{"cell_type":"code","source":["dish.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wQ0hwrCDBrRm","executionInfo":{"status":"ok","timestamp":1668978376583,"user_tz":300,"elapsed":24,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"4a449ebf-dfeb-4db9-ed38-11fbf38fa7e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 3265 entries, 0 to 3264\n","Data columns (total 12 columns):\n"," #   Column               Non-Null Count  Dtype  \n","---  ------               --------------  -----  \n"," 0   dish_id              3265 non-null   object \n"," 1   image_path           3265 non-null   object \n"," 2   total_calories       3265 non-null   float32\n"," 3   total_mass           3265 non-null   float32\n"," 4   total_fat            3265 non-null   float32\n"," 5   total_carb           3265 non-null   float32\n"," 6   total_protein        3265 non-null   float32\n"," 7   total_calories_norm  3265 non-null   float32\n"," 8   total_mass_norm      3265 non-null   float32\n"," 9   total_fat_norm       3265 non-null   float32\n"," 10  total_carb_norm      3265 non-null   float32\n"," 11  total_protein_norm   3265 non-null   float32\n","dtypes: float32(10), object(2)\n","memory usage: 204.1+ KB\n"]}]},{"cell_type":"code","source":["dish_ingredients.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"05tTSUG0CCNj","executionInfo":{"status":"ok","timestamp":1668978376584,"user_tz":300,"elapsed":22,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"9e20a9ee-f672-4c9f-9961-3ff5114adae6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 23859 entries, 0 to 27224\n","Data columns (total 13 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   dish_id        23859 non-null  object \n"," 1   id             23859 non-null  object \n"," 2   name           23859 non-null  object \n"," 3   grams          23859 non-null  float32\n"," 4   calories       23859 non-null  float32\n"," 5   fat            23859 non-null  float32\n"," 6   carb           23859 non-null  float32\n"," 7   protein        23859 non-null  float32\n"," 8   grams_norm     23859 non-null  float32\n"," 9   calories_norm  23859 non-null  float32\n"," 10  fat_norm       23859 non-null  float32\n"," 11  carb_norm      23859 non-null  float32\n"," 12  protein_norm   23859 non-null  float32\n","dtypes: float32(10), object(3)\n","memory usage: 1.6+ MB\n"]}]},{"cell_type":"markdown","source":["### Normalize Y by Total Mass"],"metadata":{"id":"nXbnSTNfUG8s"}},{"cell_type":"code","source":["dish['total_cal_mass'] = round(dish.total_calories / dish.total_mass,2)\n","dish['total_fat_mass'] = round(dish.total_fat / dish.total_mass,2)\n","dish['total_carb_mass'] = round(dish.total_carb / dish.total_mass,2)\n","dish['total_protein_mass'] = round(dish.total_protein / dish.total_mass,2)"],"metadata":{"id":"os7oIMfiUG8s"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Sample 100\n","After removing outliers for total_calories we are left with \n","* 3200 unique dishes\n","* Dishes with total_calories greater than 800 kcal\n","* We also are planning to use cropped images so lets update the image_path to cropped.png which is already processed in the image pre-processor step\n","* Building a prototype and testing it with 100 samples "],"metadata":{"id":"LWGJdEwODEOv"}},{"cell_type":"code","source":["dish_xy = dish"],"metadata":{"id":"6_q0oUajraoO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cropped_image_path = '/content/drive/MyDrive/01_LJMU_UPGRAD/experiments/final-thesis-lab/workspace/dataset/processed_overhead/'\n","dish_xy['cropped_image_path'] = dish_xy.image_path.apply(lambda x :  cropped_image_path + x[-23:-7] + 'cropped.png')"],"metadata":{"id":"VBRxpbapzp4l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dish_xy.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_gfrin0hqxeG","executionInfo":{"status":"ok","timestamp":1668978376754,"user_tz":300,"elapsed":188,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"4712c46f-bade-4be9-b77f-7d2dc2032b27"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 3265 entries, 0 to 3264\n","Data columns (total 17 columns):\n"," #   Column               Non-Null Count  Dtype  \n","---  ------               --------------  -----  \n"," 0   dish_id              3265 non-null   object \n"," 1   image_path           3265 non-null   object \n"," 2   total_calories       3265 non-null   float32\n"," 3   total_mass           3265 non-null   float32\n"," 4   total_fat            3265 non-null   float32\n"," 5   total_carb           3265 non-null   float32\n"," 6   total_protein        3265 non-null   float32\n"," 7   total_calories_norm  3265 non-null   float32\n"," 8   total_mass_norm      3265 non-null   float32\n"," 9   total_fat_norm       3265 non-null   float32\n"," 10  total_carb_norm      3265 non-null   float32\n"," 11  total_protein_norm   3265 non-null   float32\n"," 12  total_cal_mass       3265 non-null   float32\n"," 13  total_fat_mass       3265 non-null   float32\n"," 14  total_carb_mass      3265 non-null   float32\n"," 15  total_protein_mass   3265 non-null   float32\n"," 16  cropped_image_path   3265 non-null   object \n","dtypes: float32(14), object(3)\n","memory usage: 280.6+ KB\n"]}]},{"cell_type":"code","source":["dish_xy.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"x8paqmwpuFoN","executionInfo":{"status":"ok","timestamp":1668978376755,"user_tz":300,"elapsed":17,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"737b24e5-fd1e-4f40-b6a5-19df7a0f1554"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           dish_id                                         image_path  \\\n","0  dish_1561662216  /content/drive/MyDrive/01_LJMU_UPGRAD/experime...   \n","1  dish_1561662054  /content/drive/MyDrive/01_LJMU_UPGRAD/experime...   \n","2  dish_1562008979  /content/drive/MyDrive/01_LJMU_UPGRAD/experime...   \n","3  dish_1560455030  /content/drive/MyDrive/01_LJMU_UPGRAD/experime...   \n","4  dish_1558372433  /content/drive/MyDrive/01_LJMU_UPGRAD/experime...   \n","\n","   total_calories  total_mass  total_fat  total_carb  total_protein  \\\n","0      300.794281       193.0  12.387489   28.218290      18.633970   \n","1      419.438782       292.0  23.838249   26.351543      25.910593   \n","2      382.936646       290.0  22.224644   10.173570      35.345387   \n","3       20.590000       103.0   0.148000    4.625000       0.956000   \n","4       74.360001       143.0   0.286000    0.429000      20.020000   \n","\n","   total_calories_norm  total_mass_norm  total_fat_norm  total_carb_norm  \\\n","0             0.076279         0.063258        0.116486         0.033411   \n","1             0.106367         0.095706        0.224164         0.031201   \n","2             0.097110         0.095051        0.208990         0.012046   \n","3             0.005221         0.033759        0.001392         0.005476   \n","4             0.018857         0.046870        0.002689         0.000508   \n","\n","   total_protein_norm  total_cal_mass  total_fat_mass  total_carb_mass  \\\n","0            0.126339            1.56            0.06             0.15   \n","1            0.175675            1.44            0.08             0.09   \n","2            0.239643            1.32            0.08             0.04   \n","3            0.006482            0.20            0.00             0.04   \n","4            0.135736            0.52            0.00             0.00   \n","\n","   total_protein_mass                                 cropped_image_path  \n","0                0.10  /content/drive/MyDrive/01_LJMU_UPGRAD/experime...  \n","1                0.09  /content/drive/MyDrive/01_LJMU_UPGRAD/experime...  \n","2                0.12  /content/drive/MyDrive/01_LJMU_UPGRAD/experime...  \n","3                0.01  /content/drive/MyDrive/01_LJMU_UPGRAD/experime...  \n","4                0.14  /content/drive/MyDrive/01_LJMU_UPGRAD/experime...  "],"text/html":["\n","  <div id=\"df-c6034c89-5709-4845-8956-a6ad54051691\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dish_id</th>\n","      <th>image_path</th>\n","      <th>total_calories</th>\n","      <th>total_mass</th>\n","      <th>total_fat</th>\n","      <th>total_carb</th>\n","      <th>total_protein</th>\n","      <th>total_calories_norm</th>\n","      <th>total_mass_norm</th>\n","      <th>total_fat_norm</th>\n","      <th>total_carb_norm</th>\n","      <th>total_protein_norm</th>\n","      <th>total_cal_mass</th>\n","      <th>total_fat_mass</th>\n","      <th>total_carb_mass</th>\n","      <th>total_protein_mass</th>\n","      <th>cropped_image_path</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>dish_1561662216</td>\n","      <td>/content/drive/MyDrive/01_LJMU_UPGRAD/experime...</td>\n","      <td>300.794281</td>\n","      <td>193.0</td>\n","      <td>12.387489</td>\n","      <td>28.218290</td>\n","      <td>18.633970</td>\n","      <td>0.076279</td>\n","      <td>0.063258</td>\n","      <td>0.116486</td>\n","      <td>0.033411</td>\n","      <td>0.126339</td>\n","      <td>1.56</td>\n","      <td>0.06</td>\n","      <td>0.15</td>\n","      <td>0.10</td>\n","      <td>/content/drive/MyDrive/01_LJMU_UPGRAD/experime...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>dish_1561662054</td>\n","      <td>/content/drive/MyDrive/01_LJMU_UPGRAD/experime...</td>\n","      <td>419.438782</td>\n","      <td>292.0</td>\n","      <td>23.838249</td>\n","      <td>26.351543</td>\n","      <td>25.910593</td>\n","      <td>0.106367</td>\n","      <td>0.095706</td>\n","      <td>0.224164</td>\n","      <td>0.031201</td>\n","      <td>0.175675</td>\n","      <td>1.44</td>\n","      <td>0.08</td>\n","      <td>0.09</td>\n","      <td>0.09</td>\n","      <td>/content/drive/MyDrive/01_LJMU_UPGRAD/experime...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>dish_1562008979</td>\n","      <td>/content/drive/MyDrive/01_LJMU_UPGRAD/experime...</td>\n","      <td>382.936646</td>\n","      <td>290.0</td>\n","      <td>22.224644</td>\n","      <td>10.173570</td>\n","      <td>35.345387</td>\n","      <td>0.097110</td>\n","      <td>0.095051</td>\n","      <td>0.208990</td>\n","      <td>0.012046</td>\n","      <td>0.239643</td>\n","      <td>1.32</td>\n","      <td>0.08</td>\n","      <td>0.04</td>\n","      <td>0.12</td>\n","      <td>/content/drive/MyDrive/01_LJMU_UPGRAD/experime...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>dish_1560455030</td>\n","      <td>/content/drive/MyDrive/01_LJMU_UPGRAD/experime...</td>\n","      <td>20.590000</td>\n","      <td>103.0</td>\n","      <td>0.148000</td>\n","      <td>4.625000</td>\n","      <td>0.956000</td>\n","      <td>0.005221</td>\n","      <td>0.033759</td>\n","      <td>0.001392</td>\n","      <td>0.005476</td>\n","      <td>0.006482</td>\n","      <td>0.20</td>\n","      <td>0.00</td>\n","      <td>0.04</td>\n","      <td>0.01</td>\n","      <td>/content/drive/MyDrive/01_LJMU_UPGRAD/experime...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>dish_1558372433</td>\n","      <td>/content/drive/MyDrive/01_LJMU_UPGRAD/experime...</td>\n","      <td>74.360001</td>\n","      <td>143.0</td>\n","      <td>0.286000</td>\n","      <td>0.429000</td>\n","      <td>20.020000</td>\n","      <td>0.018857</td>\n","      <td>0.046870</td>\n","      <td>0.002689</td>\n","      <td>0.000508</td>\n","      <td>0.135736</td>\n","      <td>0.52</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.14</td>\n","      <td>/content/drive/MyDrive/01_LJMU_UPGRAD/experime...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c6034c89-5709-4845-8956-a6ad54051691')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c6034c89-5709-4845-8956-a6ad54051691 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c6034c89-5709-4845-8956-a6ad54051691');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["SAMPLE_SIZE = 100\n","sample50_data_index = random.sample(list(dish_xy.index),SAMPLE_SIZE)\n","sample50_data = dish_xy.loc[sample50_data_index]\n","sample50_data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gy0SY-bODHRs","executionInfo":{"status":"ok","timestamp":1668980681240,"user_tz":300,"elapsed":124,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"16462f6a-a353-4398-e725-9428b5545362"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(100, 17)"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["sample50_data.describe().transpose()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"5w54OIAMDOKG","executionInfo":{"status":"ok","timestamp":1668980683088,"user_tz":300,"elapsed":151,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"679cbce1-c5e3-44f1-a0db-fc8ac06f4d7c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     count        mean         std        min         25%  \\\n","total_calories       100.0  281.904938  206.408249  13.320001  103.364500   \n","total_mass           100.0  226.520004  145.793640  15.000000  108.000000   \n","total_fat            100.0   15.402184   14.685376   0.095000    3.807000   \n","total_carb           100.0   19.682310   15.706882   0.210000    7.408090   \n","total_protein        100.0   19.648335   18.972076   0.364000    3.977464   \n","total_calories_norm  100.0    0.071489    0.052344   0.003378    0.026213   \n","total_mass_norm      100.0    0.074245    0.047786   0.004916    0.035398   \n","total_fat_norm       100.0    0.144835    0.138094   0.000893    0.035799   \n","total_carb_norm      100.0    0.023305    0.018598   0.000249    0.008771   \n","total_protein_norm   100.0    0.133216    0.128631   0.002468    0.026967   \n","total_cal_mass       100.0    1.489800    1.275414   0.130000    0.690000   \n","total_fat_mass       100.0    0.086800    0.111960   0.000000    0.027500   \n","total_carb_mass      100.0    0.099000    0.080785   0.010000    0.040000   \n","total_protein_mass   100.0    0.092800    0.080190   0.000000    0.020000   \n","\n","                            50%         75%         max  \n","total_calories       249.366051  400.847610  908.604980  \n","total_mass           196.500000  322.000000  595.000000  \n","total_fat             11.865209   23.114458   66.524002  \n","total_carb            16.436000   27.329673   66.933792  \n","total_protein         12.944000   30.524271   76.664001  \n","total_calories_norm    0.063238    0.101652    0.230416  \n","total_mass_norm        0.064405    0.105539    0.195018  \n","total_fat_norm         0.111575    0.217358    0.625561  \n","total_carb_norm        0.019461    0.032359    0.079252  \n","total_protein_norm     0.087761    0.206956    0.519785  \n","total_cal_mass         1.145000    1.615000    5.780000  \n","total_fat_mass         0.060000    0.100000    0.500000  \n","total_carb_mass        0.080000    0.130000    0.560000  \n","total_protein_mass     0.080000    0.140000    0.370000  "],"text/html":["\n","  <div id=\"df-acf735af-ddcc-4524-99a7-7839555eb48f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>total_calories</th>\n","      <td>100.0</td>\n","      <td>281.904938</td>\n","      <td>206.408249</td>\n","      <td>13.320001</td>\n","      <td>103.364500</td>\n","      <td>249.366051</td>\n","      <td>400.847610</td>\n","      <td>908.604980</td>\n","    </tr>\n","    <tr>\n","      <th>total_mass</th>\n","      <td>100.0</td>\n","      <td>226.520004</td>\n","      <td>145.793640</td>\n","      <td>15.000000</td>\n","      <td>108.000000</td>\n","      <td>196.500000</td>\n","      <td>322.000000</td>\n","      <td>595.000000</td>\n","    </tr>\n","    <tr>\n","      <th>total_fat</th>\n","      <td>100.0</td>\n","      <td>15.402184</td>\n","      <td>14.685376</td>\n","      <td>0.095000</td>\n","      <td>3.807000</td>\n","      <td>11.865209</td>\n","      <td>23.114458</td>\n","      <td>66.524002</td>\n","    </tr>\n","    <tr>\n","      <th>total_carb</th>\n","      <td>100.0</td>\n","      <td>19.682310</td>\n","      <td>15.706882</td>\n","      <td>0.210000</td>\n","      <td>7.408090</td>\n","      <td>16.436000</td>\n","      <td>27.329673</td>\n","      <td>66.933792</td>\n","    </tr>\n","    <tr>\n","      <th>total_protein</th>\n","      <td>100.0</td>\n","      <td>19.648335</td>\n","      <td>18.972076</td>\n","      <td>0.364000</td>\n","      <td>3.977464</td>\n","      <td>12.944000</td>\n","      <td>30.524271</td>\n","      <td>76.664001</td>\n","    </tr>\n","    <tr>\n","      <th>total_calories_norm</th>\n","      <td>100.0</td>\n","      <td>0.071489</td>\n","      <td>0.052344</td>\n","      <td>0.003378</td>\n","      <td>0.026213</td>\n","      <td>0.063238</td>\n","      <td>0.101652</td>\n","      <td>0.230416</td>\n","    </tr>\n","    <tr>\n","      <th>total_mass_norm</th>\n","      <td>100.0</td>\n","      <td>0.074245</td>\n","      <td>0.047786</td>\n","      <td>0.004916</td>\n","      <td>0.035398</td>\n","      <td>0.064405</td>\n","      <td>0.105539</td>\n","      <td>0.195018</td>\n","    </tr>\n","    <tr>\n","      <th>total_fat_norm</th>\n","      <td>100.0</td>\n","      <td>0.144835</td>\n","      <td>0.138094</td>\n","      <td>0.000893</td>\n","      <td>0.035799</td>\n","      <td>0.111575</td>\n","      <td>0.217358</td>\n","      <td>0.625561</td>\n","    </tr>\n","    <tr>\n","      <th>total_carb_norm</th>\n","      <td>100.0</td>\n","      <td>0.023305</td>\n","      <td>0.018598</td>\n","      <td>0.000249</td>\n","      <td>0.008771</td>\n","      <td>0.019461</td>\n","      <td>0.032359</td>\n","      <td>0.079252</td>\n","    </tr>\n","    <tr>\n","      <th>total_protein_norm</th>\n","      <td>100.0</td>\n","      <td>0.133216</td>\n","      <td>0.128631</td>\n","      <td>0.002468</td>\n","      <td>0.026967</td>\n","      <td>0.087761</td>\n","      <td>0.206956</td>\n","      <td>0.519785</td>\n","    </tr>\n","    <tr>\n","      <th>total_cal_mass</th>\n","      <td>100.0</td>\n","      <td>1.489800</td>\n","      <td>1.275414</td>\n","      <td>0.130000</td>\n","      <td>0.690000</td>\n","      <td>1.145000</td>\n","      <td>1.615000</td>\n","      <td>5.780000</td>\n","    </tr>\n","    <tr>\n","      <th>total_fat_mass</th>\n","      <td>100.0</td>\n","      <td>0.086800</td>\n","      <td>0.111960</td>\n","      <td>0.000000</td>\n","      <td>0.027500</td>\n","      <td>0.060000</td>\n","      <td>0.100000</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>total_carb_mass</th>\n","      <td>100.0</td>\n","      <td>0.099000</td>\n","      <td>0.080785</td>\n","      <td>0.010000</td>\n","      <td>0.040000</td>\n","      <td>0.080000</td>\n","      <td>0.130000</td>\n","      <td>0.560000</td>\n","    </tr>\n","    <tr>\n","      <th>total_protein_mass</th>\n","      <td>100.0</td>\n","      <td>0.092800</td>\n","      <td>0.080190</td>\n","      <td>0.000000</td>\n","      <td>0.020000</td>\n","      <td>0.080000</td>\n","      <td>0.140000</td>\n","      <td>0.370000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-acf735af-ddcc-4524-99a7-7839555eb48f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-acf735af-ddcc-4524-99a7-7839555eb48f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-acf735af-ddcc-4524-99a7-7839555eb48f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":70}]},{"cell_type":"markdown","source":["### Train/Test Split"],"metadata":{"id":"kd0Tcf9H0BLF"}},{"cell_type":"code","source":["fractions = np.array([0.8, 0.1, 0.1])\n","# shuffle\n","df = sample50_data.sample(frac=1) \n","# split into 3 parts\n","train_50, val_50, test_50 = np.array_split(\n","    df, (fractions[:-1].cumsum() * len(df)).astype(int))\n","print(train_50.shape)\n","print(val_50.shape)\n","print(test_50.shape)\n","m1_sample50_data = pd.concat([train_50,val_50])\n","print(f\"Train = {m1_sample50_data.shape}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rAwnGNU9z0sg","executionInfo":{"status":"ok","timestamp":1668980687534,"user_tz":300,"elapsed":133,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"37cf16fb-e500-4cfe-876d-b15d38925308"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(80, 17)\n","(10, 17)\n","(10, 17)\n","Train = (90, 17)\n"]}]},{"cell_type":"markdown","source":["### Data Generators"],"metadata":{"id":"3JoPp7I40JPz"}},{"cell_type":"code","source":["generator = tf.keras.preprocessing.image.ImageDataGenerator(validation_split=0.2,\n","                                                            horizontal_flip=True,\n","                                                            vertical_flip=True,\n","                                                            zoom_range=0.25,\n","                                                            rotation_range=30,\n","                                                            brightness_range=[0.6,1.0])"],"metadata":{"id":"8daPypCo3SP0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sample50_train_gen  = generator.flow_from_dataframe(dataframe=m1_sample50_data,\n","                              target_size=(256,256),\n","                              x_col=\"cropped_image_path\",\n","                              class_mode =\"raw\",\n","                              directory=None,\n","                              y_col = \"total_cal_mass\",\n","                              batch_size=1,\n","                              shuffle=True,\n","                              subset=\"training\",\n","                              seed=123,\n","                              rescale=1.0/255)\n","sample50_test_gen  = generator.flow_from_dataframe(dataframe=m1_sample50_data,\n","                              target_size=(256,256),\n","                              x_col=\"cropped_image_path\",\n","                              class_mode =\"raw\",\n","                              directory=None,\n","                              batch_size=1,\n","                              seed=123,\n","                              y_col = \"total_cal_mass\",\n","                              subset=\"validation\",\n","                              rescale=1.0/255)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qdERC3i60K78","executionInfo":{"status":"ok","timestamp":1668980755202,"user_tz":300,"elapsed":133,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"6eb5c4ef-8846-4c88-c7ab-05acdc142611"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 72 validated image filenames.\n","Found 18 validated image filenames.\n"]}]},{"cell_type":"markdown","source":["### Sample Batch Train Images"],"metadata":{"id":"kbEwyjKXELpK"}},{"cell_type":"code","source":["plt.figure(figsize=(6, 4))\n","for i in range(2):\n","  iterator = next(sample50_train_gen)\n","  image = iterator[0]\n","  tc = iterator[1]\n","  image = np.squeeze(image)\n","  plt.subplot(1,2,i+1)\n","  plt.imshow(image.astype('uint8'))\n","  plt.title(\"Total Calories = \" + str(tc))\n","  plt.axis(\"off\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":199},"id":"Prd0XPOWEPsq","executionInfo":{"status":"ok","timestamp":1668978408469,"user_tz":300,"elapsed":754,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"6e7ecc42-e22e-476c-8f3d-cefce902e183"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["### Sample Batch Validation Images"],"metadata":{"id":"g44YGCGs5SFz"}},{"cell_type":"code","source":["plt.figure(figsize=(6, 4))\n","for i in range(2):\n","  iterator = next(sample50_test_gen)\n","  image = iterator[0]\n","  tc = iterator[1]\n","  image = np.squeeze(image)\n","  plt.subplot(1,2,i+1)\n","  plt.imshow(image.astype('uint8'))\n","  label = round(tc[0],2)\n","  plt.title(\"Total Calories = \" + str(label))\n","  plt.axis(\"off\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":199},"executionInfo":{"status":"ok","timestamp":1668978409262,"user_tz":300,"elapsed":796,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"e156384e-2fa7-4643-af61-4d9d194d3ade","id":"1-OKaL085SFz"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"KMpQDUrXbSRJ"},"source":["# Image classification with Swin Transformers\n","\n","**Author:** [Rishit Dagli](https://twitter.com/rishit_dagli)<br>\n","**Date created:** 2021/09/08<br>\n","**Last modified:** 2021/09/08<br>\n","**Description:** Image classification using Swin Transformers, a general-purpose backbone for computer vision."]},{"cell_type":"markdown","metadata":{"id":"Eq4twnbGbSRO"},"source":["This example implements [Swin Transformer: Hierarchical Vision Transformer using Shifted Windows](https://arxiv.org/abs/2103.14030)\n","by Liu et al. for image classification, and demonstrates it on the\n","[CIFAR-100 dataset](https://www.cs.toronto.edu/~kriz/cifar.html).\n","\n","Swin Transformer (**S**hifted **Win**dow Transformer) can serve as a general-purpose backbone\n","for computer vision. Swin Transformer is a hierarchical Transformer whose\n","representations are computed with _shifted windows_. The shifted window scheme\n","brings greater efficiency by limiting self-attention computation to\n","non-overlapping local windows while also allowing for cross-window connections.\n","This architecture has the flexibility to model information at various scales and has\n","a linear computational complexity with respect to image size.\n","\n","This example requires TensorFlow 2.5 or higher, as well as TensorFlow Addons,\n","which can be installed using the following commands:"]},{"cell_type":"markdown","metadata":{"id":"wz68xDYRbSRZ"},"source":["## Configure the hyperparameters\n","\n","A key parameter to pick is the `patch_size`, the size of the input patches.\n","In order to use each pixel as an individual input, you can set `patch_size` to `(1, 1)`.\n","Below, we take inspiration from the original paper settings\n","for training on ImageNet-1K, keeping most of the original settings for this example."]},{"cell_type":"code","execution_count":100,"metadata":{"executionInfo":{"elapsed":149,"status":"ok","timestamp":1669011140299,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"},"user_tz":300},"id":"YvbYsQJAbSRa"},"outputs":[],"source":["input_shape = (256, 256, 3)\n","no_of_output  = 1 # Total Calories\n","patch_size = (2, 2)  # 2-by-2 sized patches\n","dropout_rate = 0.03  # Dropout rate\n","num_heads = 8  # Attention heads\n","embed_dim = 64  # Embedding dimension\n","num_mlp = 256  # MLP layer size\n","qkv_bias = True  # Convert embedded patches to query, key, and values with a learnable additive value\n","window_size = 2  # Size of attention window\n","shift_size = 1  # Size of shifting window\n","image_dimension = 256  # Initial image size\n","\n","num_patch_x = input_shape[0] // patch_size[0]\n","num_patch_y = input_shape[1] // patch_size[1]\n","\n","learning_rate = 1e-4\n","# batch_size = 128\n","batch_size = 10\n","num_epochs = 10\n","weight_decay = 0.0001"]},{"cell_type":"markdown","metadata":{"id":"N9j-dCOEbSRc"},"source":["## Helper functions\n","\n","We create two helper functions to help us get a sequence of\n","patches from the image, merge patches, and apply dropout."]},{"cell_type":"markdown","source":["### window_partition(x,window_size)"],"metadata":{"id":"FV-cZUGK7yBc"}},{"cell_type":"code","source":["def window_partition(x, window_size):\n","    _, height, width, channels = x.shape\n","    patch_num_y = height // window_size\n","    patch_num_x = width // window_size\n","    x = tf.reshape(\n","        x, shape=(-1, patch_num_y, window_size, patch_num_x, window_size, channels)\n","    )\n","    x = tf.transpose(x, (0, 1, 3, 2, 4, 5))\n","    windows = tf.reshape(x, shape=(-1, window_size, window_size, channels))\n","    return windows"],"metadata":{"id":"CkFMmzV_8D7o"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### window_reverse(windows, window_size, height, width, channels)"],"metadata":{"id":"Mkzx6mm875Ef"}},{"cell_type":"code","source":["def window_reverse(windows, window_size, height, width, channels):\n","    patch_num_y = height // window_size\n","    patch_num_x = width // window_size\n","    x = tf.reshape(\n","        windows,\n","        shape=(-1, patch_num_y, patch_num_x, window_size, window_size, channels),\n","    )\n","    x = tf.transpose(x, perm=(0, 1, 3, 2, 4, 5))\n","    x = tf.reshape(x, shape=(-1, height, width, channels))\n","    return x\n"],"metadata":{"id":"H-ZojaD08GjL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### DropPath(tf.keras.layers.Layer)"],"metadata":{"id":"EPQIj0zk76Fk"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"FC61dFDtbSRc"},"outputs":[],"source":["class DropPath(tf.keras.layers.Layer):\n","    def __init__(self, drop_prob=None, **kwargs):\n","        super(DropPath, self).__init__(**kwargs)\n","        self.drop_prob = drop_prob\n","\n","    def call(self, x):\n","        input_shape = tf.shape(x)\n","        batch_size = input_shape[0]\n","        rank = x.shape.rank\n","        shape = (batch_size,) + (1,) * (rank - 1)\n","        random_tensor = (1 - self.drop_prob) + tf.random.uniform(shape, dtype=x.dtype)\n","        path_mask = tf.floor(random_tensor)\n","        output = tf.math.divide(x, 1 - self.drop_prob) * path_mask\n","        return output"]},{"cell_type":"markdown","metadata":{"id":"SQKXdkorbSRd"},"source":["## Window based multi-head self-attention\n","\n","Usually Transformers perform global self-attention, where the relationships between\n","a token and all other tokens are computed. The global computation leads to quadratic\n","complexity with respect to the number of tokens. Here, as the [original paper](https://arxiv.org/abs/2103.14030)\n","suggests, we compute self-attention within local windows, in a non-overlapping manner.\n","Global self-attention leads to quadratic computational complexity in the number of patches,\n","whereas window-based self-attention leads to linear complexity and is easily scalable."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JzSsN9eRbSRe"},"outputs":[],"source":["class WindowAttention(tf.keras.layers.Layer):\n","    def __init__(\n","        self, dim, window_size, num_heads, qkv_bias=True, dropout_rate=0.0, **kwargs\n","    ):\n","        super(WindowAttention, self).__init__(**kwargs)\n","        self.dim = dim\n","        self.window_size = window_size\n","        self.num_heads = num_heads\n","        self.scale = (dim // num_heads) ** -0.5\n","        self.qkv = tf.keras.layers.Dense(dim * 3, use_bias=qkv_bias)\n","        self.dropout = tf.keras.layers.Dropout(dropout_rate)\n","        self.proj = tf.keras.layers.Dense(dim)\n","\n","    def build(self, input_shape):\n","        num_window_elements = (2 * self.window_size[0] - 1) * (\n","            2 * self.window_size[1] - 1\n","        )\n","        self.relative_position_bias_table = self.add_weight(\n","            shape=(num_window_elements, self.num_heads),\n","            initializer=tf.initializers.Zeros(),\n","            trainable=True,\n","        )\n","        coords_h = np.arange(self.window_size[0])\n","        coords_w = np.arange(self.window_size[1])\n","        coords_matrix = np.meshgrid(coords_h, coords_w, indexing=\"ij\")\n","        coords = np.stack(coords_matrix)\n","        coords_flatten = coords.reshape(2, -1)\n","        relative_coords = coords_flatten[:, :, None] - coords_flatten[:, None, :]\n","        relative_coords = relative_coords.transpose([1, 2, 0])\n","        relative_coords[:, :, 0] += self.window_size[0] - 1\n","        relative_coords[:, :, 1] += self.window_size[1] - 1\n","        relative_coords[:, :, 0] *= 2 * self.window_size[1] - 1\n","        relative_position_index = relative_coords.sum(-1)\n","\n","        self.relative_position_index = tf.Variable(\n","            initial_value=tf.convert_to_tensor(relative_position_index), trainable=False\n","        )\n","\n","    def call(self, x, mask=None):\n","        _, size, channels = x.shape\n","        head_dim = channels // self.num_heads\n","        x_qkv = self.qkv(x)\n","        x_qkv = tf.reshape(x_qkv, shape=(-1, size, 3, self.num_heads, head_dim))\n","        x_qkv = tf.transpose(x_qkv, perm=(2, 0, 3, 1, 4))\n","        q, k, v = x_qkv[0], x_qkv[1], x_qkv[2]\n","        q = q * self.scale\n","        k = tf.transpose(k, perm=(0, 1, 3, 2))\n","        attn = q @ k\n","\n","        num_window_elements = self.window_size[0] * self.window_size[1]\n","        relative_position_index_flat = tf.reshape(\n","            self.relative_position_index, shape=(-1,)\n","        )\n","        relative_position_bias = tf.gather(\n","            self.relative_position_bias_table, relative_position_index_flat\n","        )\n","        relative_position_bias = tf.reshape(\n","            relative_position_bias, shape=(num_window_elements, num_window_elements, -1)\n","        )\n","        relative_position_bias = tf.transpose(relative_position_bias, perm=(2, 0, 1))\n","        attn = attn + tf.expand_dims(relative_position_bias, axis=0)\n","\n","        if mask is not None:\n","            nW = mask.get_shape()[0]\n","            mask_float = tf.cast(\n","                tf.expand_dims(tf.expand_dims(mask, axis=1), axis=0), tf.float32\n","            )\n","            attn = (\n","                tf.reshape(attn, shape=(-1, nW, self.num_heads, size, size))\n","                + mask_float\n","            )\n","            attn = tf.reshape(attn, shape=(-1, self.num_heads, size, size))\n","            attn = tf.keras.activations.relu(attn)\n","        else:\n","            attn = tf.keras.activations.relu(attn)\n","        attn = self.dropout(attn)\n","\n","        x_qkv = attn @ v\n","        x_qkv = tf.transpose(x_qkv, perm=(0, 2, 1, 3))\n","        x_qkv = tf.reshape(x_qkv, shape=(-1, size, channels))\n","        x_qkv = self.proj(x_qkv)\n","        x_qkv = self.dropout(x_qkv)\n","        return x_qkv\n"]},{"cell_type":"markdown","metadata":{"id":"YUDR2lwibSRg"},"source":["## The complete Swin Transformer model\n","\n","Finally, we put together the complete Swin Transformer by replacing the standard multi-head\n","attention (MHA) with shifted windows attention. As suggested in the\n","original paper, we create a model comprising of a shifted window-based MHA\n","layer, followed by a 2-layer MLP with GELU nonlinearity in between, applying\n","`LayerNormalization` before each MSA layer and each MLP, and a residual\n","connection after each of these layers.\n","\n","Notice that we only create a simple MLP with 2 Dense and\n","2 Dropout layers. Often you will see models using ResNet-50 as the MLP which is\n","quite standard in the literature. However in this paper the authors use a\n","2-layer MLP with GELU nonlinearity in between."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IIu91sLrbSRh"},"outputs":[],"source":["class SwinTransformer(tf.keras.layers.Layer):\n","    def __init__(\n","        self,\n","        dim,\n","        num_patch,\n","        num_heads,\n","        window_size=7,\n","        shift_size=0,\n","        num_mlp=1024,\n","        qkv_bias=True,\n","        dropout_rate=0.0,\n","        **kwargs,\n","    ):\n","        super(SwinTransformer, self).__init__(**kwargs)\n","\n","        self.dim = dim  # number of input dimensions\n","        self.num_patch = num_patch  # number of embedded patches\n","        self.num_heads = num_heads  # number of attention heads\n","        self.window_size = window_size  # size of window\n","        self.shift_size = shift_size  # size of window shift\n","        self.num_mlp = num_mlp  # number of MLP nodes\n","\n","        self.norm1 = tf.keras.layers.LayerNormalization(epsilon=1e-5)\n","        self.attn = WindowAttention(\n","            dim,\n","            window_size=(self.window_size, self.window_size),\n","            num_heads=num_heads,\n","            qkv_bias=qkv_bias,\n","            dropout_rate=dropout_rate,\n","        )\n","        self.drop_path = DropPath(dropout_rate)\n","        self.norm2 = tf.keras.layers.LayerNormalization(epsilon=1e-5)\n","\n","        self.mlp = tf.keras.Sequential(\n","            [\n","                tf.keras.layers.Dense(num_mlp),\n","                tf.keras.layers.Activation(tf.keras.activations.gelu),\n","                tf.keras.layers.Dropout(dropout_rate),\n","                tf.keras.layers.Dense(dim),\n","                tf.keras.layers.Dropout(dropout_rate),\n","            ]\n","        )\n","\n","        if min(self.num_patch) < self.window_size:\n","            self.shift_size = 0\n","            self.window_size = min(self.num_patch)\n","\n","    def build(self, input_shape):\n","        if self.shift_size == 0:\n","            self.attn_mask = None\n","        else:\n","            height, width = self.num_patch\n","            h_slices = (\n","                slice(0, -self.window_size),\n","                slice(-self.window_size, -self.shift_size),\n","                slice(-self.shift_size, None),\n","            )\n","            w_slices = (\n","                slice(0, -self.window_size),\n","                slice(-self.window_size, -self.shift_size),\n","                slice(-self.shift_size, None),\n","            )\n","            mask_array = np.zeros((1, height, width, 1))\n","            count = 0\n","            for h in h_slices:\n","                for w in w_slices:\n","                    mask_array[:, h, w, :] = count\n","                    count += 1\n","            mask_array = tf.convert_to_tensor(mask_array)\n","\n","            # mask array to windows\n","            mask_windows = window_partition(mask_array, self.window_size)\n","            mask_windows = tf.reshape(\n","                mask_windows, shape=[-1, self.window_size * self.window_size]\n","            )\n","            attn_mask = tf.expand_dims(mask_windows, axis=1) - tf.expand_dims(\n","                mask_windows, axis=2\n","            )\n","            attn_mask = tf.where(attn_mask != 0, -100.0, attn_mask)\n","            attn_mask = tf.where(attn_mask == 0, 0.0, attn_mask)\n","            self.attn_mask = tf.Variable(initial_value=attn_mask, trainable=False)\n","\n","    def call(self, x):\n","        height, width = self.num_patch\n","        _, num_patches_before, channels = x.shape\n","        x_skip = x\n","        x = self.norm1(x)\n","        x = tf.reshape(x, shape=(-1, height, width, channels))\n","        if self.shift_size > 0:\n","            shifted_x = tf.roll(\n","                x, shift=[-self.shift_size, -self.shift_size], axis=[1, 2]\n","            )\n","        else:\n","            shifted_x = x\n","\n","        x_windows = window_partition(shifted_x, self.window_size)\n","        x_windows = tf.reshape(\n","            x_windows, shape=(-1, self.window_size * self.window_size, channels)\n","        )\n","        attn_windows = self.attn(x_windows, mask=self.attn_mask)\n","\n","        attn_windows = tf.reshape(\n","            attn_windows, shape=(-1, self.window_size, self.window_size, channels)\n","        )\n","        shifted_x = window_reverse(\n","            attn_windows, self.window_size, height, width, channels\n","        )\n","        if self.shift_size > 0:\n","            x = tf.roll(\n","                shifted_x, shift=[self.shift_size, self.shift_size], axis=[1, 2]\n","            )\n","        else:\n","            x = shifted_x\n","\n","        x = tf.reshape(x, shape=(-1, height * width, channels))\n","        x = self.drop_path(x)\n","        x = x_skip + x\n","        x_skip = x\n","        x = self.norm2(x)\n","        x = self.mlp(x)\n","        x = self.drop_path(x)\n","        x = x_skip + x\n","        return x\n"]},{"cell_type":"markdown","metadata":{"id":"o51JEasZbSRj"},"source":["## Model training and evaluation\n","\n","### Extract and embed patches\n","\n","We first create 3 layers to help us extract, embed and merge patches from the\n","images on top of which we will later use the Swin Transformer class we built."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"27XCLRACbSRj"},"outputs":[],"source":["class PatchExtract(tf.keras.layers.Layer):\n","    def __init__(self, patch_size, **kwargs):\n","        super(PatchExtract, self).__init__(**kwargs)\n","        self.patch_size_x = patch_size[0]\n","        self.patch_size_y = patch_size[0]\n","\n","    def call(self, images):\n","        batch_size = tf.shape(images)[0]\n","        patches = tf.image.extract_patches(\n","            images=images,\n","            sizes=(1, self.patch_size_x, self.patch_size_y, 1),\n","            strides=(1, self.patch_size_x, self.patch_size_y, 1),\n","            rates=(1, 1, 1, 1),\n","            padding=\"VALID\",\n","        )\n","        patch_dim = patches.shape[-1]\n","        patch_num = patches.shape[1]\n","        return tf.reshape(patches, (batch_size, patch_num * patch_num, patch_dim))\n","\n","\n","class PatchEmbedding(tf.keras.layers.Layer):\n","    def __init__(self, num_patch, embed_dim, **kwargs):\n","        super(PatchEmbedding, self).__init__(**kwargs)\n","        self.num_patch = num_patch\n","        self.proj = tf.keras.layers.Dense(embed_dim)\n","        self.pos_embed = tf.keras.layers.Embedding(input_dim=num_patch, output_dim=embed_dim)\n","\n","    def call(self, patch):\n","        pos = tf.range(start=0, limit=self.num_patch, delta=1)\n","        return self.proj(patch) + self.pos_embed(pos)\n","\n","\n","class PatchMerging(tf.keras.layers.Layer):\n","    def __init__(self, num_patch, embed_dim):\n","        super(PatchMerging, self).__init__()\n","        self.num_patch = num_patch\n","        self.embed_dim = embed_dim\n","        self.linear_trans = tf.keras.layers.Dense(2 * embed_dim, use_bias=False)\n","\n","    def call(self, x):\n","        height, width = self.num_patch\n","        _, _, C = x.get_shape().as_list()\n","        x = tf.reshape(x, shape=(-1, height, width, C))\n","        x0 = x[:, 0::2, 0::2, :]\n","        x1 = x[:, 1::2, 0::2, :]\n","        x2 = x[:, 0::2, 1::2, :]\n","        x3 = x[:, 1::2, 1::2, :]\n","        x = tf.concat((x0, x1, x2, x3), axis=-1)\n","        x = tf.reshape(x, shape=(-1, (height // 2) * (width // 2), 4 * C))\n","        return self.linear_trans(x)\n"]},{"cell_type":"markdown","metadata":{"id":"Wk71e_iObSRk"},"source":["### Build the model\n","\n","We put together the Swin Transformer model."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FxIQ78oRbSRk"},"outputs":[],"source":["input = tf.keras.layers.Input(input_shape)\n","# x = tf.keras.layers.RandomCrop(image_dimension, image_dimension)(input)\n","# x = tf.keras.layers.RandomFlip(\"horizontal\")(x)\n","x = PatchExtract(patch_size)(input)\n","x = PatchEmbedding(num_patch_x * num_patch_y, embed_dim)(x)\n","x = SwinTransformer(\n","    dim=embed_dim,\n","    num_patch=(num_patch_x, num_patch_y),\n","    num_heads=num_heads,\n","    window_size=window_size,\n","    shift_size=0,\n","    num_mlp=num_mlp,\n","    qkv_bias=qkv_bias,\n","    dropout_rate=dropout_rate,\n",")(x)\n","x = SwinTransformer(\n","    dim=embed_dim,\n","    num_patch=(num_patch_x, num_patch_y),\n","    num_heads=num_heads,\n","    window_size=window_size,\n","    shift_size=shift_size,\n","    num_mlp=num_mlp,\n","    qkv_bias=qkv_bias,\n","    dropout_rate=dropout_rate,\n",")(x)\n","x = PatchMerging((num_patch_x, num_patch_y), embed_dim=embed_dim)(x)\n","x = tf.keras.layers.GlobalAveragePooling1D()(x)\n","output = tf.keras.layers.Dense(no_of_output)(x)"]},{"cell_type":"markdown","metadata":{"id":"Y7VWDgIUbSRl"},"source":["### Train\n","\n","We train the model on CIFAR-100. Here, we only train the model\n","for 40 epochs to keep the training time short in this example.\n","In practice, you should train for 150 epochs to reach convergence."]},{"cell_type":"code","source":["model = tf.keras.Model(input, output)"],"metadata":{"id":"QafedkUoBkWz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j574h-U8BbZq","executionInfo":{"status":"ok","timestamp":1669009999770,"user_tz":300,"elapsed":150,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"6c225494-810e-4b32-9ce0-9e4de0911a1c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_10\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_9 (InputLayer)        [(None, 256, 256, 3)]     0         \n","                                                                 \n"," patch_extract_8 (PatchExtra  (None, 16384, 12)        0         \n"," ct)                                                             \n","                                                                 \n"," patch_embedding_8 (PatchEmb  (None, 16384, 64)        1049408   \n"," edding)                                                         \n","                                                                 \n"," swin_transformer_11 (SwinTr  (None, 16384, 64)        50072     \n"," ansformer)                                                      \n","                                                                 \n"," swin_transformer_12 (SwinTr  (None, 16384, 64)        115608    \n"," ansformer)                                                      \n","                                                                 \n"," patch_merging_3 (PatchMergi  (None, 4096, 128)        32768     \n"," ng)                                                             \n","                                                                 \n"," global_average_pooling1d_3   (None, 128)              0         \n"," (GlobalAveragePooling1D)                                        \n","                                                                 \n"," dense_67 (Dense)            (None, 1)                 129       \n","                                                                 \n","=================================================================\n","Total params: 1,247,985\n","Trainable params: 1,182,417\n","Non-trainable params: 65,568\n","_________________________________________________________________\n"]}]},{"cell_type":"code","execution_count":101,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rjweRTybbSRm","outputId":"9e61bfac-4ece-49c1-b10c-cf9161bda8aa","executionInfo":{"status":"ok","timestamp":1669011541381,"user_tz":300,"elapsed":156624,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","72/72 [==============================] - 43s 529ms/step - loss: 8.2139 - mean_absolute_error: 8.2139 - val_loss: 14.8291 - val_mean_absolute_error: 14.8291\n","Epoch 2/10\n","72/72 [==============================] - 38s 534ms/step - loss: 6.7763 - mean_absolute_error: 6.7763 - val_loss: 7.2978 - val_mean_absolute_error: 7.2978\n","Epoch 3/10\n","72/72 [==============================] - 37s 519ms/step - loss: 6.8885 - mean_absolute_error: 6.8885 - val_loss: 1.3164 - val_mean_absolute_error: 1.3164\n","Epoch 4/10\n","72/72 [==============================] - 36s 506ms/step - loss: 6.4806 - mean_absolute_error: 6.4806 - val_loss: 13.4241 - val_mean_absolute_error: 13.4241\n","Epoch 5/10\n","72/72 [==============================] - 37s 517ms/step - loss: 6.3808 - mean_absolute_error: 6.3808 - val_loss: 12.0075 - val_mean_absolute_error: 12.0075\n","Epoch 6/10\n","72/72 [==============================] - 37s 517ms/step - loss: 5.9372 - mean_absolute_error: 5.9372 - val_loss: 10.4946 - val_mean_absolute_error: 10.4946\n","Epoch 7/10\n","72/72 [==============================] - 37s 509ms/step - loss: 6.3886 - mean_absolute_error: 6.3886 - val_loss: 17.3482 - val_mean_absolute_error: 17.3482\n","Epoch 8/10\n","72/72 [==============================] - 37s 515ms/step - loss: 6.3872 - mean_absolute_error: 6.3872 - val_loss: 4.6067 - val_mean_absolute_error: 4.6067\n","Epoch 9/10\n","72/72 [==============================] - 36s 500ms/step - loss: 6.1782 - mean_absolute_error: 6.1782 - val_loss: 4.7203 - val_mean_absolute_error: 4.7203\n","Epoch 10/10\n","72/72 [==============================] - 35s 493ms/step - loss: 5.8576 - mean_absolute_error: 5.8576 - val_loss: 10.2366 - val_mean_absolute_error: 10.2366\n"]}],"source":["m1_lr_schedule = tf.keras.optimizers.schedules.ExponentialDecay( learning_rate,\n","    decay_steps=100000,\n","    decay_rate=0.96,\n","    staircase=True)\n","# model.compile(\n","#     optimizer=tfa.optimizers.AdamW(learning_rate=learning_rate,\n","#                                    weight_decay=weight_decay),\n","#     loss=\"mean_absolute_error\",\n","#     metrics=\"mean_absolute_error\"\n","# )\n","model.compile(\n","    optimizer=tf.keras.optimizers.RMSprop(learning_rate=m1_lr_schedule),\n","    loss=\"mean_absolute_error\",\n","    metrics=\"mean_absolute_error\"\n",")\n","# optimizer=tf.keras.optimizers.RMSprop(learning_rate=m3_lr_schedule),\n","          # loss=\"mean_squared_error\",\n","history = model.fit(\n","      sample50_train_gen,\n","      validation_data = sample50_test_gen,\n","      batch_size=batch_size,\n","      epochs=num_epochs\n",")"]},{"cell_type":"code","source":["history.history"],"metadata":{"id":"0STdedkt9h4W","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669012340248,"user_tz":300,"elapsed":154,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"4938fc0c-075b-4bcf-9b18-30fab9e097cb"},"execution_count":102,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'loss': [8.213871002197266,\n","  6.776346206665039,\n","  6.888461589813232,\n","  6.480557441711426,\n","  6.380758762359619,\n","  5.937197208404541,\n","  6.388610363006592,\n","  6.387237071990967,\n","  6.178155422210693,\n","  5.857623100280762],\n"," 'mean_absolute_error': [8.213871002197266,\n","  6.776346206665039,\n","  6.888461589813232,\n","  6.480557441711426,\n","  6.380758762359619,\n","  5.937197208404541,\n","  6.388610363006592,\n","  6.387237071990967,\n","  6.178155422210693,\n","  5.857623100280762],\n"," 'val_loss': [14.82907772064209,\n","  7.297799110412598,\n","  1.3163648843765259,\n","  13.424126625061035,\n","  12.007509231567383,\n","  10.49461555480957,\n","  17.348190307617188,\n","  4.606672286987305,\n","  4.720343589782715,\n","  10.236617088317871],\n"," 'val_mean_absolute_error': [14.82907772064209,\n","  7.297799110412598,\n","  1.3163648843765259,\n","  13.424126625061035,\n","  12.007509231567383,\n","  10.49461555480957,\n","  17.348190307617188,\n","  4.606672286987305,\n","  4.720343589782715,\n","  10.236617088317871]}"]},"metadata":{},"execution_count":102}]},{"cell_type":"markdown","metadata":{"id":"9UHdI9gQbSRm"},"source":["Let's visualize the training progress of the model."]},{"cell_type":"code","execution_count":104,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"LPB5f7mgbSRn","executionInfo":{"status":"ok","timestamp":1669012395570,"user_tz":300,"elapsed":338,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"1b2f7625-53bc-434a-a436-a9444f9dc19f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.plot(history.history[\"loss\"], label=\"train_loss\")\n","plt.plot(history.history[\"val_loss\"], label=\"val_loss\")\n","# plt.plot(history.history[\"mean_absolute_error\"], label=\"MAE\")\n","# plt.plot(history.history[\"val_mean_absolute_error\"], label=\"VAL MAE\")\n","plt.xlabel(\"Epochs\")\n","plt.ylabel(\"Loss\")\n","plt.title(\"Train and Validation Losses Over Epochs\", fontsize=14)\n","plt.legend()\n","plt.grid()plt.plot(history.history[\"loss\"], label=\"train_loss\")\n","plt.plot(history.history[\"val_loss\"], label=\"val_loss\")\n","# plt.plot(history.history[\"mean_absolute_error\"], label=\"MAE\")\n","# plt.plot(history.history[\"val_mean_absolute_error\"], label=\"VAL MAE\")\n","plt.xlabel(\"Epochs\")\n","plt.ylabel(\"Loss\")\n","plt.title(\"Train and Validation Losses Over Epochs\", fontsize=14)\n","plt.legend()\n","plt.grid()\n","plt.show()\n","plt.show()"]},{"cell_type":"code","source":["m2_lr_schedule = tf.keras.optimizers.schedules.ExponentialDecay( learning_rate,\n","    decay_steps=100000,\n","    decay_rate=0.96,\n","    staircase=True)\n","# model.compile(\n","#     optimizer=tfa.optimizers.AdamW(learning_rate=learning_rate,\n","#                                    weight_decay=weight_decay),\n","#     loss=\"mean_absolute_error\",\n","#     metrics=\"mean_absolute_error\"\n","# )\n","model.compile(\n","    optimizer=tf.keras.optimizers.RMSprop(learning_rate=m2_lr_schedule),\n","    loss=\"mean_absolute_error\",\n","    metrics=\"mean_absolute_error\"\n",")\n","# optimizer=tf.keras.optimizers.RMSprop(learning_rate=m3_lr_schedule),\n","          # loss=\"mean_squared_error\",\n","history30 = model.fit(\n","      sample50_train_gen,\n","      validation_data = sample50_test_gen,\n","      batch_size=10,\n","      epochs=30\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kbJC1XLQ5dwE","executionInfo":{"status":"ok","timestamp":1669013870423,"user_tz":300,"elapsed":1304085,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"98015085-9caf-4440-aa6f-8f7d54dc2afd"},"execution_count":105,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","72/72 [==============================] - 43s 531ms/step - loss: 6.8409 - mean_absolute_error: 6.8409 - val_loss: 6.9492 - val_mean_absolute_error: 6.9492\n","Epoch 2/30\n","72/72 [==============================] - 39s 541ms/step - loss: 5.8065 - mean_absolute_error: 5.8065 - val_loss: 4.6088 - val_mean_absolute_error: 4.6088\n","Epoch 3/30\n","72/72 [==============================] - 38s 535ms/step - loss: 5.6404 - mean_absolute_error: 5.6404 - val_loss: 1.6868 - val_mean_absolute_error: 1.6868\n","Epoch 4/30\n","72/72 [==============================] - 37s 520ms/step - loss: 5.7939 - mean_absolute_error: 5.7939 - val_loss: 8.2880 - val_mean_absolute_error: 8.2880\n","Epoch 5/30\n","72/72 [==============================] - 38s 532ms/step - loss: 5.8886 - mean_absolute_error: 5.8886 - val_loss: 5.5487 - val_mean_absolute_error: 5.5487\n","Epoch 6/30\n","72/72 [==============================] - 38s 533ms/step - loss: 5.5662 - mean_absolute_error: 5.5662 - val_loss: 6.8206 - val_mean_absolute_error: 6.8206\n","Epoch 7/30\n","72/72 [==============================] - 38s 523ms/step - loss: 5.9297 - mean_absolute_error: 5.9297 - val_loss: 3.0458 - val_mean_absolute_error: 3.0458\n","Epoch 8/30\n","72/72 [==============================] - 38s 530ms/step - loss: 5.2973 - mean_absolute_error: 5.2973 - val_loss: 7.9937 - val_mean_absolute_error: 7.9937\n","Epoch 9/30\n","72/72 [==============================] - 38s 528ms/step - loss: 5.1919 - mean_absolute_error: 5.1919 - val_loss: 10.7626 - val_mean_absolute_error: 10.7626\n","Epoch 10/30\n","72/72 [==============================] - 40s 561ms/step - loss: 5.2579 - mean_absolute_error: 5.2579 - val_loss: 5.1306 - val_mean_absolute_error: 5.1306\n","Epoch 11/30\n","72/72 [==============================] - 38s 529ms/step - loss: 5.2195 - mean_absolute_error: 5.2195 - val_loss: 7.4179 - val_mean_absolute_error: 7.4179\n","Epoch 12/30\n","72/72 [==============================] - 38s 528ms/step - loss: 5.3456 - mean_absolute_error: 5.3456 - val_loss: 11.6420 - val_mean_absolute_error: 11.6420\n","Epoch 13/30\n","72/72 [==============================] - 38s 524ms/step - loss: 4.8712 - mean_absolute_error: 4.8712 - val_loss: 7.8036 - val_mean_absolute_error: 7.8036\n","Epoch 14/30\n","72/72 [==============================] - 38s 526ms/step - loss: 5.2761 - mean_absolute_error: 5.2761 - val_loss: 1.8291 - val_mean_absolute_error: 1.8291\n","Epoch 15/30\n","72/72 [==============================] - 38s 521ms/step - loss: 4.9075 - mean_absolute_error: 4.9075 - val_loss: 5.1439 - val_mean_absolute_error: 5.1439\n","Epoch 16/30\n","72/72 [==============================] - 37s 513ms/step - loss: 5.0401 - mean_absolute_error: 5.0401 - val_loss: 3.2701 - val_mean_absolute_error: 3.2701\n","Epoch 17/30\n","72/72 [==============================] - 38s 527ms/step - loss: 5.0072 - mean_absolute_error: 5.0072 - val_loss: 2.9684 - val_mean_absolute_error: 2.9684\n","Epoch 18/30\n","72/72 [==============================] - 37s 521ms/step - loss: 4.9558 - mean_absolute_error: 4.9558 - val_loss: 2.7423 - val_mean_absolute_error: 2.7423\n","Epoch 19/30\n","72/72 [==============================] - 42s 581ms/step - loss: 4.5037 - mean_absolute_error: 4.5037 - val_loss: 1.5871 - val_mean_absolute_error: 1.5871\n","Epoch 20/30\n","72/72 [==============================] - 43s 602ms/step - loss: 5.1412 - mean_absolute_error: 5.1412 - val_loss: 2.6243 - val_mean_absolute_error: 2.6243\n","Epoch 21/30\n","72/72 [==============================] - 44s 605ms/step - loss: 4.7528 - mean_absolute_error: 4.7528 - val_loss: 10.5140 - val_mean_absolute_error: 10.5140\n","Epoch 22/30\n","72/72 [==============================] - 41s 572ms/step - loss: 4.9787 - mean_absolute_error: 4.9787 - val_loss: 4.7418 - val_mean_absolute_error: 4.7418\n","Epoch 23/30\n","72/72 [==============================] - 40s 556ms/step - loss: 4.8910 - mean_absolute_error: 4.8910 - val_loss: 4.6473 - val_mean_absolute_error: 4.6473\n","Epoch 24/30\n","72/72 [==============================] - 41s 571ms/step - loss: 4.2999 - mean_absolute_error: 4.2999 - val_loss: 7.7492 - val_mean_absolute_error: 7.7492\n","Epoch 25/30\n","72/72 [==============================] - 41s 571ms/step - loss: 4.5377 - mean_absolute_error: 4.5377 - val_loss: 5.4360 - val_mean_absolute_error: 5.4360\n","Epoch 26/30\n","72/72 [==============================] - 41s 563ms/step - loss: 4.5169 - mean_absolute_error: 4.5169 - val_loss: 0.9512 - val_mean_absolute_error: 0.9512\n","Epoch 27/30\n","72/72 [==============================] - 40s 561ms/step - loss: 4.3805 - mean_absolute_error: 4.3805 - val_loss: 2.0610 - val_mean_absolute_error: 2.0610\n","Epoch 28/30\n","72/72 [==============================] - 39s 542ms/step - loss: 4.4850 - mean_absolute_error: 4.4850 - val_loss: 2.8482 - val_mean_absolute_error: 2.8482\n","Epoch 29/30\n","72/72 [==============================] - 40s 549ms/step - loss: 4.5533 - mean_absolute_error: 4.5533 - val_loss: 0.9959 - val_mean_absolute_error: 0.9959\n","Epoch 30/30\n","72/72 [==============================] - 39s 548ms/step - loss: 4.2305 - mean_absolute_error: 4.2305 - val_loss: 6.9714 - val_mean_absolute_error: 6.9714\n"]}]},{"cell_type":"code","source":["history30.history"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669014303300,"user_tz":300,"elapsed":134,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"9788a842-32c0-4581-9e47-81a0a3b23da2","id":"8rmuMIad5XG7"},"execution_count":107,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'loss': [6.840936183929443,\n","  5.80647611618042,\n","  5.640431880950928,\n","  5.793936729431152,\n","  5.888575553894043,\n","  5.566180229187012,\n","  5.929688453674316,\n","  5.297286510467529,\n","  5.191867828369141,\n","  5.257913589477539,\n","  5.219466686248779,\n","  5.345562934875488,\n","  4.8712263107299805,\n","  5.276101589202881,\n","  4.907486438751221,\n","  5.040097236633301,\n","  5.007241725921631,\n","  4.955785274505615,\n","  4.503713130950928,\n","  5.141205310821533,\n","  4.752786159515381,\n","  4.978718280792236,\n","  4.890991687774658,\n","  4.299901008605957,\n","  4.537668228149414,\n","  4.516870975494385,\n","  4.380547523498535,\n","  4.485032558441162,\n","  4.5533037185668945,\n","  4.230462551116943],\n"," 'mean_absolute_error': [6.840936183929443,\n","  5.80647611618042,\n","  5.640431880950928,\n","  5.793936729431152,\n","  5.888575553894043,\n","  5.566180229187012,\n","  5.929688453674316,\n","  5.297286510467529,\n","  5.191867828369141,\n","  5.257913589477539,\n","  5.219466686248779,\n","  5.345562934875488,\n","  4.8712263107299805,\n","  5.276101589202881,\n","  4.907486438751221,\n","  5.040097236633301,\n","  5.007241725921631,\n","  4.955785274505615,\n","  4.503713130950928,\n","  5.141205310821533,\n","  4.752786159515381,\n","  4.978718280792236,\n","  4.890991687774658,\n","  4.299901008605957,\n","  4.537668228149414,\n","  4.516870975494385,\n","  4.380547523498535,\n","  4.485032558441162,\n","  4.5533037185668945,\n","  4.230462551116943],\n"," 'val_loss': [6.949184894561768,\n","  4.608824253082275,\n","  1.6867870092391968,\n","  8.288005828857422,\n","  5.5486578941345215,\n","  6.820559024810791,\n","  3.0457868576049805,\n","  7.993707656860352,\n","  10.762592315673828,\n","  5.130624771118164,\n","  7.417936325073242,\n","  11.642037391662598,\n","  7.803552627563477,\n","  1.8290685415267944,\n","  5.143890857696533,\n","  3.2700765132904053,\n","  2.9684178829193115,\n","  2.742302656173706,\n","  1.5871423482894897,\n","  2.624328136444092,\n","  10.514030456542969,\n","  4.741792678833008,\n","  4.647336483001709,\n","  7.749205589294434,\n","  5.435958385467529,\n","  0.9511837363243103,\n","  2.0610432624816895,\n","  2.8481600284576416,\n","  0.9958782196044922,\n","  6.971428394317627],\n"," 'val_mean_absolute_error': [6.949184894561768,\n","  4.608824253082275,\n","  1.6867870092391968,\n","  8.288005828857422,\n","  5.5486578941345215,\n","  6.820559024810791,\n","  3.0457868576049805,\n","  7.993707656860352,\n","  10.762592315673828,\n","  5.130624771118164,\n","  7.417936325073242,\n","  11.642037391662598,\n","  7.803552627563477,\n","  1.8290685415267944,\n","  5.143890857696533,\n","  3.2700765132904053,\n","  2.9684178829193115,\n","  2.742302656173706,\n","  1.5871423482894897,\n","  2.624328136444092,\n","  10.514030456542969,\n","  4.741792678833008,\n","  4.647336483001709,\n","  7.749205589294434,\n","  5.435958385467529,\n","  0.9511837363243103,\n","  2.0610432624816895,\n","  2.8481600284576416,\n","  0.9958782196044922,\n","  6.971428394317627]}"]},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["plt.plot(history30.history[\"loss\"], label=\"train_loss\")\n","plt.plot(history30.history[\"val_loss\"], label=\"val_loss\")\n","# plt.plot(history.history[\"mean_absolute_error\"], label=\"MAE\")\n","# plt.plot(history.history[\"val_mean_absolute_error\"], label=\"VAL MAE\")\n","plt.xlabel(\"Epochs\")\n","plt.ylabel(\"Loss\")\n","plt.title(\"Train and Validation Losses Over Epochs\", fontsize=14)\n","plt.legend()\n","plt.grid()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"D-s_w0K25Ji7","executionInfo":{"status":"ok","timestamp":1669014308952,"user_tz":300,"elapsed":450,"user":{"displayName":"Deepak Kurup","userId":"12080243808198814348"}},"outputId":"0aa42a81-dc2e-4ea7-c9ab-cf1014b9f36d"},"execution_count":108,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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TJ06NYi9sQYtADTe0VIPVbugq13p5INFTSHEpkF0Ys+y1DHQXANNQeyHRjME0W6gGu84uKHn74aDEJcenHZr9h0++ofDPYFijw5OPzSB5eM74dBma4+ZNQ1Of9Dt6nvuuYcxY8Zw4403AvD73/+e8PBwlixZQk1NDe3t7dx///2cc845PjXb0tLC9ddfz5o1awgPD+eRRx7hxBNPZOvWrVxzzTW0tbXR1dXFf/7zH3Jycrj44ospLi6ms7OTu+++m0suuaRfp+0Legag8Y5Sh7D1hkPBa7emsMcAbNItALQhOCjsLSCjzLoiJAOF888/nzfeeKP79xtvvMFVV13FO++8w7p161iyZAm33XYbUkqfjvvEE08ghGDz5s289tprXHXVVbS0tPD0009zyy23sGHDBtasWcPw4cP55JNPyMnJYePGjWzZsqU7A2iw0DMAjXeUrIPwGOhoDp4A6GyH2gMw9cLDl6fkgQjTdoBgsfxxRhVvAn4XuDY8jNQDxYwZMygvL6e0tJSKigpSUlLIysri1ltvZenSpdhsNkpKSigrKyMrK8vr4y5btoybb74ZgIkTJ5KXl8fOnTs55phjeOCBByguLub8889n3LhxTJs2jdtuu41f/epXnHXWWRx33HGBOl2X6BmAxjtK18OYE9XfwRIAdcUgO3urgMIi1DItAIJDcw2RbTXg40h4MHDRRRfx1ltv8e9//5tLLrmEV155hYqKCtauXcuGDRvIzMx0WQfAHy699FLef/99YmJiOOOMM/jiiy8YP34869atY9q0adx1113cd999lrTlLVoAaPqmsUpV4RoxTxlkGw4Gp13TBTR1VO91Oilc8GiuJqyrTQXlDTEuueQSXn/9dd566y0uuugi6urqyMjIICIigiVLlrB//36fj3ncccfxyiuvALBz506KioqYMGECe/fuZfTo0fzsZz/jnHPOYdOmTZSWlhIbG8vll1/OHXfcwbp166w+RY9oFZCmbw4a+v+cmRCfFbwZQI0LF1CTtLFQ+JVySbXpcUxAaa5R3/YyiEkObV8sZsqUKTQ0NJCbm0t2djaXXXYZZ599NtOmTWPOnDlMnDjR52PecMMNXH/99UybNo3w8HBeeOEFoqKieOONN3jppZeIiIggKyuL3/zmN3zzzTfccccd2Gw2IiIieOqppwJwlu7RAkDTNyWmADgKErKC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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"vQUKbzYybSRn"},"source":["Let's display the final results of the training on CIFAR-100."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rzfrKVT5bSRn"},"outputs":[],"source":["loss, accuracy, top_5_accuracy = model.evaluate(x_test, y_test)\n","print(f\"Test loss: {round(loss, 2)}\")\n","print(f\"Test accuracy: {round(accuracy * 100, 2)}%\")\n","print(f\"Test top 5 accuracy: {round(top_5_accuracy * 100, 2)}%\")"]},{"cell_type":"markdown","metadata":{"id":"ya_m6HS0bSRn"},"source":["The Swin Transformer model we just trained has just 152K parameters, and it gets\n","us to ~75% test top-5 accuracy within just 40 epochs without any signs of overfitting\n","as well as seen in above graph. This means we can train this network for longer\n","(perhaps with a bit more regularization) and obtain even better performance.\n","This performance can further be improved by additional techniques like cosine\n","decay learning rate schedule, other data augmentation techniques. While experimenting,\n","I tried training the model for 150 epochs with a slightly higher dropout and greater\n","embedding dimensions which pushes the performance to ~72% test accuracy on CIFAR-100\n","as you can see in the screenshot.\n","\n","![Results of training for longer](https://i.imgur.com/9vnQesZ.png)\n","\n","The authors present a top-1 accuracy of 87.3% on ImageNet. The authors also present\n","a number of experiments to study how input sizes, optimizers etc. affect the final\n","performance of this model. The authors further present using this model for object detection,\n","semantic segmentation and instance segmentation as well and report competitive results\n","for these. You are strongly advised to also check out the\n","[original paper](https://arxiv.org/abs/2103.14030).\n","\n","This example takes inspiration from the official\n","[PyTorch](https://github.com/microsoft/Swin-Transformer) and\n","[TensorFlow](https://github.com/VcampSoldiers/Swin-Transformer-Tensorflow) implementations."]}],"metadata":{"colab":{"provenance":[{"file_id":"https://github.com/keras-team/keras-io/blob/master/examples/vision/ipynb/swin_transformers.ipynb","timestamp":1668501288475}],"toc_visible":true,"machine_shape":"hm"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.0"},"gpuClass":"standard"},"nbformat":4,"nbformat_minor":0}